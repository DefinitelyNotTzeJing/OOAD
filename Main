import java.util.Scanner;
import java.time.format.DateTimeFormatter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.io.File;

public class Main 
{
    Scanner inputLoginUI = new Scanner(System.in);
    Scanner inputSystemUI = new Scanner(System.in);

    public int loginUI()
    {
        // Display welcome message and options
        int loginOption = 0;
        do
        {
            System.out.println("\n\nWelcome to the e-Hailing Booking System!");
            System.out.println("1. Register a new account");
            System.out.println("2. Client login");
            System.out.println("3. Administrator login");
            System.out.print("\nChoose an option: ");
            loginOption = inputLoginUI.nextInt();

            if (loginOption != 1 && loginOption != 2 && loginOption != 3)
            {
                System.out.println("Invalid operation (loginUI)");
            }
        }while (loginOption != 1 && loginOption != 2 && loginOption != 3);
        return loginOption;
    }



    private int systemUI(String username)
    {
        int systemOption = 0; //initialize systemOption with a value
        
        do 
        {
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
            LocalDateTime now = LocalDateTime.now();  
            System.out.println("\n\nDear user\t\t\t\t\tCurrent Date and Time " + dtf.format(now)); //get username from login
            System.out.println("Welcome to e-Hailing Booking System");
            System.out.println("_____________________________________________________________________________________________");
            System.out.println("Do you want to: ");
            System.out.println("<1> Create/Request Booking(s)");
            System.out.println("<2> View Booking(s)");
            System.out.println("<3> Quit");
            systemOption = inputSystemUI.nextInt();
            inputSystemUI.nextLine();

            if (systemOption != 1 && systemOption != 2 && systemOption != 3)
            {
                System.out.println("Invalid operation(system UI)");
            }
        } while (systemOption != 1 && systemOption != 2 && systemOption != 3);

        return systemOption;
    }



    private String bookingUI() {
        String username; // Assume username is obtained from a session or entered by the user
        System.out.println("Please enter your username:");
        Scanner inputScanner = new Scanner(System.in);
        username = inputScanner.nextLine(); // Read username

        String bookingIDInput = "0"; //initialize the variable with a temporary value
        System.out.println("Booking ID\tUsername\tDate\tTime\tPayment Method");
        System.out.println("____________________________________________________________");

        try {
            String bookingDirectory = "booking.txt";
            File bookingFile = new File(bookingDirectory);
            Scanner bookingDataReader = new Scanner(bookingFile);

            while (bookingDataReader.hasNextLine()) {
                String bookingData = bookingDataReader.nextLine();
                // Handle different delimiters in the data file
                String[] dataArray = bookingData.contains("|") ? bookingData.split("\\|") : bookingData.split(",");
                
                if (dataArray[1].equals(username)) { // Filter by username
                    System.out.println(dataArray[0] + "\t" + dataArray[1] + "\t" + dataArray[2] + "\t" + dataArray[3] + "\t" + dataArray[4]);
                    if (bookingIDInput.equals("0")) {
                        bookingIDInput = dataArray[0]; // Set to the first matching booking ID
                    }
                }
            }
            bookingDataReader.close();

            System.out.println("Please enter the respective Booking ID:");
            bookingIDInput = inputScanner.nextLine(); // Read selected booking ID
            
        } catch (IOException e) {
            System.out.println("An error occurred during the booking file opening.");
        } finally {
            inputScanner.close(); // Ensure the scanner is closed after use
        }

        return bookingIDInput;
    }



    public String adminSystemUI()
    {
        String bookingID = "0";
        String bookingName;
        String bookingDate;
        String bookingTime;

        Scanner adminInput = new Scanner(System.in);
        
        System.out.println("Welcome to e-Hailing Booking System");
        System.out.println("Dear Admin, which booking would you like to choose?");
        System.out.println("____________________________________________________________________________________________________________");
        //shows all booking ID with indexes at the front, let the admin choose the booking with its index no
    
        System.out.println("Index No.\tBooking ID\tName\t\t\tDate\t\tTime\tPayment Method");
        int numBooking = 0; // check how many lines are there in the booking text file
        File bookingFile = new File("booking.txt");
        try
        {
            Scanner readerBooking = new Scanner(bookingFile);
            while (readerBooking.hasNextLine()) {
                numBooking++;
                readerBooking.nextLine(); // Move scanner to the next line
            }
            readerBooking.close();

            // Reopen the scanner to read from the beginning of the file
            readerBooking = new Scanner(bookingFile);

            for (int i = 1; i <= numBooking; i++) 
            { // Start from 1 and use <= to include all lines
                String data = readerBooking.nextLine();
                String[] dataArrayBooking = data.split("\\|");
        
                bookingID = dataArrayBooking[0];
                bookingName = dataArrayBooking[1];
                bookingDate = dataArrayBooking[2];
                bookingTime = dataArrayBooking[3];
        
                System.out.println(i + ".\t\t" + bookingID + "\t" + bookingName + "\t" + bookingDate + "\t" + bookingTime);
            }
            readerBooking.close();
            System.out.print("\n\nPlease input the Booking ID to choose the desired booking: ");
            bookingID = adminInput.nextLine();
            adminInput.close();
        } catch(IOException e)
        {
            System.out.println("An error has occured (admin system UI)");
            e.getMessage();
        }
        return bookingID;
    }



    public static void main(String[] args) 
    {   
        Main main = new Main();
        BookingManager book = new BookingManager();
        LoginAndRegister lar = new LoginAndRegister();
        Client c = new Client();

        int loginOption, systemOption;
        String adminOption;
        int loginValidateClient; //1 = true, 2 = false
        int loginValidateAdmin;

        String bookingIDInput;

        String username = c.getUsername();

        do
        {
            loginOption = main.loginUI();
            try
            {
                if (loginOption == 1) //client register
                {
                    lar.clientRegister(); 
                }

                else if (loginOption == 2) //client login
                {
                    loginValidateClient = lar.clientLogin();
                    if (loginValidateClient == 1)
                    {
                        systemOption = main.systemUI(username);
                        if (systemOption == 1) //Create bookings
                        {
                            //create bookings and save the details in respective user text file (make a method in client class and save the booking details in text file)
                            book.bookingCreate();
                        }

                        else if (systemOption  == 2) //View bookings
                        {
                            //view all bookings and a new interface for the user to update, cancel and search for certain booking 
                            bookingIDInput = main.bookingUI();
                            book.bookingView(bookingIDInput);
                        }

                        else if (systemOption == 3) //Quit program
                        {
                            System.out.println("\033[H\033[2J"); //clear screen
                            System.out.println("Account logout successfully.");
                        }
                    }
                    else
                    {
                        System.out.println("Incorrect username and password. Please try again.");
                    }
                }

                else if (loginOption == 3) //admin login
                {
                    loginValidateAdmin = lar.adminLogin();
                    if (loginValidateAdmin == 1) //admin login succeed
                    {
                        adminOption = main.adminSystemUI();
                        book.bookingView(adminOption); //link to a method to show booking details
                    }
                    else if (loginValidateAdmin == 2) //admin login failed
                    {
                        System.out.println("Incorrect username and password. Please try again.");
                        main.loginUI();
                    }   
                }
                    
            } catch (Exception e)
            {
                System.out.println("\n\nAn error has occured. Please try again (main method)\n");
                e.printStackTrace();
            }
        } while (loginOption != 1 && loginOption != 2); 
    }
}
