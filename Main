import java.util.Scanner;
//import java.util.*;
import java.time.format.DateTimeFormatter;
import java.io.FileNotFoundException;
import java.time.LocalDateTime;

public class Main 
{
    Scanner inputLoginUI = new Scanner(System.in);
    Scanner inputSystemUI = new Scanner(System.in);

    public int loginUI()
    {
        // Display welcome message and options
        int loginOption = 0;
        do
        {
            System.out.println("\n\nWelcome to the e-Hailing Booking System!");
            System.out.println("1. Register a new account");
            System.out.println("2. Client login");
            System.out.println("\n3. Administrator login");
            System.out.print("Choose an option: ");
            loginOption = inputLoginUI.nextInt();

            if (loginOption != 1 && loginOption != 2 && loginOption != 3)
            {
                System.out.println("Invalid operation (loginUI)");
            }
        }while (loginOption != 1 && loginOption != 2 && loginOption != 3);
        return loginOption;
    }



    private int systemUI() throws FileNotFoundException
    {
        Client c = new Client();
        
        int systemOption;
        String aGender = c.getGender();
        String username = c.getUsername(); 
        String gender;
        
        if (aGender == "M")
        {
            gender = ("Mr.");
        }
        else
        {
            gender = ("Mrs.");
        }
        
        do 
        {
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
            LocalDateTime now = LocalDateTime.now();  
            System.out.println("\n\nDear " + gender + " " + username + "\t\t\t\t\tCurrent Date and Time " + dtf.format(now)); //get username from login
            System.out.println("Welcome to e-Hailing Booking System");
            System.out.println("_____________________________________________________________________________________________");
            System.out.println("Do you want to: ");
            System.out.println("<1> Create/Request Booking(s)");
            System.out.println("<2> View Booking(s)");
            System.out.println("<3> Quit");
            systemOption = inputSystemUI.nextInt();
            inputSystemUI.nextLine();

            if (systemOption != 1 && systemOption != 2 && systemOption != 3)
            {
                System.out.println("Invalid operation(Line 56)");
            }
        } while (systemOption != 1 && systemOption != 2 && systemOption != 3);
        
        return systemOption;
    }



//    private void bookingUI()
//    {
//         System.out.println("");
//    }



    public int adminSystemUI()
    {
        System.out.println("Welcome to e-Hailing Booking System");
        System.out.println("Dear Admin, What would you like to do?");
        //shows all booking ID with indexes at the front, let the admin choose the booking with its index no
    }



    public static void main(String[] args) 
    {   
        Main main = new Main();
        Administrator admin = new Administrator();
        BookingManager book = new BookingManager();
        LoginAndRegister lar = new LoginAndRegister();

        int loginOption, systemOption, adminOption;
        boolean loginValidateClient;
        boolean loginValidateAdmin;

        do
        {
            loginOption = main.loginUI();
            try
            {
                if (loginOption == 1) //client register
                    lar.clientRegister();   
            
                else if (loginOption == 2) //client login
                {
                    loginValidateClient = lar.clientLogin();
                    if (loginValidateClient == true)
                    {
                        systemOption = main.systemUI();
                        if (systemOption == 1) //Create bookings
                        {
                            //create bookings and save the details in respective user text file (make a method in client class and save the booking details in text file)
                            System.out.println("Create bookings waiting to be done");
                        }

                        else if (systemOption  == 2) //View bookings
                        {
                            //view all bookings and a new interface for the user to update, cancel and search for certain booking 
                            System.out.println("View bookings waiting to be done");
                        }

                        else if (systemOption == 3) //Quit program
                        {
                            System.out.println("\033[H\033[2J"); //clear screen
                            System.out.println("Account logout successfully.");
                        }
                    }
                    else if (loginValidateClient == false)
                    {
                        System.out.println("Incorrect username and password. Please try again.");
                        main.loginUI();
                    }
                }
                else if (loginOption == 3) //admin login
                {
                    loginValidateAdmin = lar.adminLogin();
                    if (loginValidateAdmin == true) //admin login succeed
                    {
                        adminOption = main.adminSystemUI();
                    }
                    else if (loginValidateAdmin == false) //admin login failed
                    {
                        System.out.println("Incorrect username and password. Please try again.");
                        main.loginUI();
                    }   
                }
                    
            } catch (Exception e)
            {
                System.out.println("\n\nAn error has occured. Please try again (main method)\n");
                e.printStackTrace();
            }
        } while (loginOption != 1 && loginOption != 2); 
    }
}
